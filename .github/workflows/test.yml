name: Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Environment
        run: |
          echo ::set-env name=SUDO_AVAIL::$(if command -v sudo \
            2> /dev/null; then echo 1; fi)
      - name: Update repositories
        run: |
          ${SUDO_AVAIL:+sudo} apt-get update
      - name: Install dependencies
        run: |
          ${SUDO_AVAIL:+sudo} apt-get install -y make stow sudo wget curl
      - name: Cache kcov
        id: cache-kcov
        uses: actions/cache@v1
        with:
          path: kcov
          key: ${{ runner.os }}-kcov
      - name: Install kcov install dependencies
        run: |
          sudo ls -al /home/runner/work
          sudo ls -al /home/runner/work/_temp
          sudo rm -rf /home/runner/work/_temp
          ${SUDO_AVAIL:+sudo} apt-get install -y libcurl4-openssl-dev \
            binutils-dev libiberty-dev libdw-dev
      - name: Install kcov compile only dependencies
        run: |
          ${SUDO_AVAIL:+sudo} apt-get install -y python3 tar xz-utils \
            cmake zlib1g-dev libssl-dev build-essential
      - name: Build kcov
        run: |
          wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
          tar xzf master.tar.gz
          mv kcov-master kcov
          cd kcov
          mkdir -p build
          cd build
          cmake ..
          make
      - name: Install Kcov
        run: |
          cd kcov/build
          sudo make install
      - name: Test
        timeout-minutes: 1
        run: make test
      - name: Upload coverage result to codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: Upload coverage result to codacy
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh)
