name: Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Environment
        run: |
          echo ::set-env name=WEEK::$(date +%V)
          echo ::set-env name=SUDO_AVAIL::$(if command -v sudo \
            2> /dev/null; then echo 1; fi)
      - name: Update repositories
        run: |
          ${SUDO_AVAIL:+sudo} apt-get update
      - name: Install dependencies
        run: |
          ${SUDO_AVAIL:+sudo} apt-get install -y make stow sudo wget curl
      - name: Cache kcov
        id: cache-kcov
        uses: actions/cache@v1
        with:
          path: kcov-master
          key: ${{ runner.os }}-kcov-master-${WEEK}
      - name: Install kcov install dependencies
        run: |
          ${SUDO_AVAIL:+sudo} apt-get install -y libcurl4-openssl-dev \
            binutils-dev libiberty-dev libdw-dev
      - name: Install kcov compile only dependencies
        if: steps.cache-kcov.outputs.cache-hit != 'true'
        run: |
          ${SUDO_AVAIL:+sudo} apt-get install -y python3 tar xz-utils \
            cmake zlib1g-dev libssl-dev build-essential
      - name: Build kcov
        if: steps.cache-kcov.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz
          tar xzf master.tar.gz
          cd kcov-master
          mkdir -p build
          cd build
          cmake ..
          make
      - name: Install Kcov
        run: |
          cd kcov-master/build
          sudo make install
      - name: Test
        run: make test
      - name: Cache codecov reporter
        id: cache-codecov
        uses: actions/cache@v1
        with:
          path: codecov-reporter.sh
          key: ${{ runner.os }}-kcov-master-${WEEK}
      - name: Download codecov reporter
        if: steps.cache-codecov.outputs.cache-hit != 'true'
        run: |
          curl -s https://codecov.io/bash > codecov-reporter.sh
          chmod u+x codecov-reporter.sh
      - name: Upload coverage result to codecov
        run: codecov-reporter.sh
      - name: Upload coverage result to codacy
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh)
